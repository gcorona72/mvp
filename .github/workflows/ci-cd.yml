name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Construir el proyecto con Maven
        run: mvn clean package

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Ejecutar pruebas unitarias con JUnit
        run: mvn test

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v3

      - name: Iniciar sesi贸n en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir y etiquetar la imagen Docker
        run: |
          docker build -t usuario/app:latest .
          docker tag usuario/app:latest usuario/app:${{ github.sha }}

      - name: Subir la imagen a Docker Hub
        run: |
          docker push usuario/app:latest
          docker push usuario/app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Desplegar en el servidor
        run: |
          ssh usuario@servidor "docker pull usuario/app:latest && docker stop app || true && docker rm app || true && docker run -d --name app -p 8080:8080 usuario/app:latest"
